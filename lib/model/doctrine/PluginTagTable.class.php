<?php
/**
 * PluginTagTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    opTagPlugin
 * @subpackage model
 * @author     Hiromi Hishida<info@77-web.com>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class PluginTagTable extends Doctrine_Table
{
  
  public function saveTags($tags, $foreignId, $foreignTable, $memberId, $communityId=null)
  {
    $tags = explode(sfConfig::get("app_tag_separator", ","), $tags);
    foreach($this->getTags($foreignId, $foreignTable) as $tag)
    {
      if(!in_array($tag->getName(), $tags))
      {
        $tag->delete();
      }
    }
    
    foreach($tags as $name)
    {
      $this->saveTag($name, $foreignId, $foreignTable, $memberId, $communityId);
    }
  }
  
  public function saveTag($tag, $foreignId, $foreignTable, $memberId, $communityId=null)
  {
    if($tag!="")
    {
      $obj = $this->createQuery()->where("member_id=?", $memberId)->addWhere("foreign_table=?", $foreignTable)->addWhere("foreign_id=?", $foreignId)->addWhere("name=?", $tag)->fetchOne();
      if(!$obj)
      {
        $obj = new Tag();
        $obj->setMemberId($memberId);
        if($communityId) $obj->setCommunityId($communityId);
        $obj->setForeignTable($foreignTable);
        $obj->setForeignId($foreignId);
        $obj->setName($tag);
        $obj->save();
      }
    }
  }
  
  public function getTags($foreignId, $foreignTable)
  {
    return $this->createQuery()->where("foreign_id=?", $foreignId)->addWhere("foreign_table=?", $foreignTable)->execute();
  }
  
  public function getTagsString($foreignId, $foreignTable, $sep=",")
  {
    $tags = array();
    foreach($this->getTags($foreignId, $foreignTable) as $t)
    {
      $tags[] = $t->getName();
    }
    return implode($sep, $tags);
  }
  
  public function getTagRank($size, $page=1)
  {
    $obj_list = $this->createQuery("t")->select("t.name, count(t.id) as cnt")->groupBy("t.name")->orderBy("cnt DESC")->limit($size)->offset($size*($page-1))->execute();
    
    $ranks = array();
    $i = 0;
    foreach($obj_list as $obj)
    {
      if($i<=5)
      {
        $ranks[] = array("tag"=>$obj->getName(), "level"=>1);
      }
      elseif($i<=10)
      {
        $ranks[] = array("tag"=>$obj->getName(), "level"=>2);
      }
      else
      {
        $ranks[] = array("tag"=>$obj->getName(), "level"=>3);
      }
            
      $i++;
    }
    shuffle($ranks);
    
    
    return $ranks;
  }
  
  public function getPager($tag, $size, $page=1)
  {
    $q = $this->createQuery()->where("name=?", $tag)->orderBy("updated_at DESC");
    $pager = new sfDoctrinePager("Tag", $size);
    $pager->setQuery($q);
    $pager->setPage($page);
    $pager->init();
    
    return $pager;
  }
}